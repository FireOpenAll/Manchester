<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Copyright 2009-2012 the original author or authors. Licensed under the 
	Apache License, Version 2.0 (the "License"); you may not use this file except 
	in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.galaxy.dal.user.mapper.UserMapper">

	<resultMap type="user" id="USER_MAP">
		<id property="id" column="id" />
		<result property="createdTime" column="created_time" />
		<result property="updatedTime" column="updated_time" />
		<result property="LoginName" column="login_name" />
		<result property="password" column="password" />
		<result property="gender" column="gender" />
		<result property="birthday" column="birthday" />
		<result property="userType" column="user_type" />
        <result property="nick" column="nick"/>
		<result property="friendNum" column="friend_num" />
		<result property="realName" column="real_name" />
		<result property="email" column="email" />
        <result property="mobile" column="mobile" />
        <result property="realNameAuth" column="real_name_auth" />
        <result property="emailAuth" column="email_auth" />
        <result property="mobileAuth" column="mobile_auth" />
        <result property="avatar" column="avatar" />
        <result property="weiboOpenId" column="weibo_openid" />
        <result property="webcharOpenId" column="webchat_openid" />
        <result property="qqOpenId" column="qq_openid" />
        <result property="lastVisitTime" column="last_visit_time" />
        <result property="userStatus" column="user_status" />
		<result property="salt" column="salt" />
		<result property="tags" column="tags" />
		<result property="region" column="region" />
	</resultMap>
	
	<insert id="insert" parameterType="user" useGeneratedKeys="true"
		keyProperty="id">
		insert into u_user
		(created_time,updated_time,login_name,password,
		gender,birthday,user_type,nick,
		friend_num,real_name,email,mobile,
		real_name_auth,email_auth,mobile_auth,avatar,
		weibo_openid,webchat_openid,qq_openid,last_visit_time,user_status,salt,
		tags,region)
		VALUES(#{createdTime},#{updatedTime},#{LoginName},#{password},
		#{gender},#{birthday},#{userType},#{nick},
		#{friendNum},#{realName},#{email},#{mobile},
		#{realNameAuth},#{emailAuth},#{mobileAuth},#{avatar},
		#{webcharOpenId},#{webcharOpenId},#{qqOpenId},#{lastVisitTime},#{userStatus},#{salt},
		#{tags},#{region})
	</insert>
		
    <update id="updateProfileForm" parameterType="userProfileForm">
        update u_user
        set gender = #{gender},nick = #{nickName},birthday = #{birthday},tags = #{tags},region = #{region}
        where id = #{userId}
    </update>
    
    
	<delete id="deleteById" parameterType="long">
		delete from u_user
		WHERE id = #{id}
    </delete>
	<select id="getById" resultMap="USER_MAP" parameterType="long">
		SELECT *
		FROM u_user
		WHERE id = #{id}
	</select>
	
	
	<update id="updateLoginInfo">
		update u_user
		set last_visit_time =#{lastVisitTime}
		where id = #{id}
	</update>
	
	<select id="getUserByEmail" parameterType="String" resultMap="USER_MAP">
	select * 
	from u_user
	where email = #{email}
	limit 1
	</select>
	
	<select id="getUserByLoginName" parameterType="String" resultMap="USER_MAP">
	select * 
	from u_user
	where login_name = #{loginName}
	limit 1
	</select>
	
	<select id="getUserByMobile" parameterType="String" resultMap="USER_MAP">
	select *
	from u_user
	where mobile = #{mobile}
	limit 1
	</select>
	
	<select id="getUserByEmailPassword" resultMap="USER_MAP">
	select *
	from u_user
	where mobile = #{mobile} and password = #{password}
	limit 1
	</select>
	
	<select id="getUserByLoginNamePassword" resultMap="USER_MAP">
	select *
	from u_user
	where mobile = #{mobile} and password = #{password}
	limit 1
	</select>
	
	<select id="getUserByMobilePassword" resultMap="USER_MAP">
	select *
	from u_user
	where mobile = #{mobile} and password = #{password}
	limit 1
	</select>
	
	<update id="updateUserFriendNumByUserId">
		update u_user
		set friend_num = #{num}
		where id = #{id}
	</update>
	
	<update id="updateEmailAuthByEmail">
		update u_user
		set email_auth = #{emailAuth}
		where email =#{email}
	</update>
	
	<update id="updateMobileAuthByMobile">
		update u_user
		set mobile_auth = #{mobileAuth}
		where mobile =#{mobile}
	</update>
	
	<select id="findUserByLoginName" parameterType="string" resultMap="USER_MAP">
	SELECT * 
	FROM u_user
	WHERE
	login_name = #{loginName} or email = #{loginName} or mobile = #{loginName} limit 1
	</select>
</mapper>
